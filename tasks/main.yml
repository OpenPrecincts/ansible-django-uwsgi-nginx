---
- name: add deadsnakes repo for Py 3.7
  apt_repository:
    repo: ppa:deadsnakes/ppa
- name: install system packages
  apt:
    update_cache: yes
    pkg:
      - build-essential
      - git
      - python
      - python-setuptools
      - python-dev
      - virtualenv
      - uwsgi
      - uwsgi-src
      - nginx
      - libgdal-dev
      - certbot
      - python3-certbot-dns-route53
      - python3.7
      - python3.7-dev

- name: build python37 plugin
  command: uwsgi --build-plugin "/usr/src/uwsgi/plugins/python python37"
  environment:
    PYTHON: python3.7
  args:
    creates: /usr/lib/uwsgi/plugins/python37_plugin.so
    chdir: /usr/lib/uwsgi/plugins/

- name: add localhost alias
  lineinfile: dest=/etc/hosts line='127.0.0.1 {{ domain_name }}'

# add letsencrypt
- name: add letsencrypt cert
  command: certbot certonly --dns-route53 --expand -d {{ domain_name }} --email jpturk@princeton.edu --agree-tos -n creates=/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem
- name: add letsencrypt renewal crontab
  cron: job="letsencrypt renew" special_time="daily" name="renew certificate"

# user home directory
- name: make project dir
  file: path=/home/{{ user }} state=directory
- name: add project user
  user: name={{ user }} home=/home/{{ user }} shell=/bin/bash state=present
- name: chown user directory
  file: path=/home/{{ user }} owner={{ user }}
- name: add env_vars for project user
  template: src=env_vars.j2 dest=/home/{{ user }}/env_vars mode=640
  become_user: "{{ user }}"
  become: yes

# python installation
- name: checkout project directories
  git: repo={{ git_repository }} dest=/home/{{ user }}/src/{{ directory }} accept_hostkey=yes version=master
  become_user: "{{ user }}"
  become: yes
  notify:
    - restart django-application
  register: gitresult
- name: set virtualenv dir
  set_fact:
    venv_dir: /home/{{ user }}/virt{{ gitresult.after }}

- name: need to stop celery before rebuilding venv
  service: name=celery state=stopped enabled=yes
  when: celery
- name: create virtualenv
  command: virtualenv -p python3.7 {{ venv_dir }}
  become_user: "{{ user }}"
  become: yes
  notify:
    - restart django-application
- name: add checkouts to python path
  lineinfile: dest={{ venv_dir }}/lib/python3.7/site-packages/checkouts.pth create=yes state=present line=/home/{{ user }}/src/{{ directory }}
  become_user: "{{ user }}"
  become: yes
- name: install pipenv
  pip: name=pipenv virtualenv={{ venv_dir }}
  become_user: "{{ user }}"
  become: yes
- name: install Pipfile.lock
  command: "{{ venv_dir }}/bin/pipenv install"  # --deploy
  args:
    chdir: /home/{{ user }}/src/{{ directory }}
  environment:
    VIRTUAL_ENV: "{{ venv_dir }}"
  become_user: "{{ user }}"
  become: yes
- name: link virtualenv
  file: src={{ venv_dir }} dest=/home/{{ user }}/virt state=link
  notify:
    - restart django-application
- name: need to restart celery before rebuilding venv
  service: name=celery state=restarted enabled=yes
  when: celery

# nginx
- name: make certs dir
  file: path=/etc/nginx/certs/ state=directory
- name: generate dh params
  command: openssl dhparam -out /etc/nginx/certs/dhparams.pem 2048 creates=/etc/nginx/certs/dhparams.pem
- name: remove nginx default config
  file: path=/etc/nginx/sites-enabled/default state=absent
- name: ensure nginx is running and starts on boot
  service: name=nginx state=restarted enabled=yes

# uwsgi
- name: write uwsgi template
  template: src=uwsgi.j2 dest=/etc/uwsgi/apps-enabled/{{ user }}.ini
  notify:
    - restart django-application
- name: start uwsgi
  service: name=uwsgi state=started
